{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./autenticacion.service\";\nexport class InterceptorService {\n  constructor(autenticacionServicio) {\n    this.autenticacionServicio = autenticacionServicio;\n  }\n  intercept(req, next) {\n    var currentUser = this.autenticacionServicio.UsuarioAutenticado;\n    if (currentUser && currentUser.accessToken) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.accessToken}`\n        }\n      });\n    }\n    console.log(\"Interceptor está corriendo \" + JSON.stringify(currentUser));\n    return next.handle(req);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)(i0.ɵɵinject(i1.AutenticacionService));\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,qBAA0C;IAA1C,0BAAqB,GAArBA,qBAAqB;EAAyB;EAElEC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,WAAW,GAAC,IAAI,CAACJ,qBAAqB,CAACK,kBAAkB;IAC7D,IAAGD,WAAW,IAAIA,WAAW,CAACE,WAAW,EAAC;MACxCJ,GAAG,GAACA,GAAG,CAACK,KAAK,CAAC;QACZC,UAAU,EAAC;UACTC,aAAa,EAAE,UAAUL,WAAW,CAACE,WAAW;;OAEnD,CAAC;;IAEJI,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGC,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC,CAAC;IACxE,OAAOD,IAAI,CAACW,MAAM,CAACZ,GAAG,CAAC;EACzB;;AAfWJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAiB,SAAlBjB,kBAAkB;EAAAkB,YAFjB;AAAM","names":["InterceptorService","constructor","autenticacionServicio","intercept","req","next","currentUser","UsuarioAutenticado","accessToken","clone","setHeaders","Authorization","console","log","JSON","stringify","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Leo\\Desktop\\Dev\\FrontEnd-dinamico-YoProgramo\\miPortfolio\\src\\app\\services\\interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AutenticacionService } from './autenticacion.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private autenticacionServicio:AutenticacionService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    var currentUser=this.autenticacionServicio.UsuarioAutenticado;\r\n    if(currentUser && currentUser.accessToken){\r\n      req=req.clone({\r\n        setHeaders:{\r\n          Authorization: `Bearer ${currentUser.accessToken}`\r\n        }\r\n      })\r\n    }\r\n    console.log(\"Interceptor está corriendo \" + JSON.stringify(currentUser));\r\n    return next.handle(req);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}